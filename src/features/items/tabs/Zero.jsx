import { VStack, Heading, SimpleGrid, Box, Text } from "@hope-ui/solid";
import {createSignal, createMemo, useContext} from "solid-js";
import {CurrentBookContext} from "../../../providers/CurrentBook";

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
const fetchData = async () => {
  const response = await fetch("/api/entries"); // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π endpoint
  const data = await response.json();
  return data;
};

export default function Zero() {

  const { store } = useContext(CurrentBookContext);

  const [entries, setEntries] = createSignal([]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const loadEntries = async () => {
    const data = await fetchData();
    setEntries(data);
  };

  loadEntries();  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö

  const stats = createMemo(() => {
    const now = new Date();
    const all = entries();
    const onHands = all.filter((e) => !e.returnedAt).length;
    const overdue = all.filter((e) => !e.returnedAt && new Date(e.takenAt).getTime() + 30 * 86400000 < now.getTime()).length;
    const returned = all.filter((e) => e.returnedAt).length;

    return {
      total: all.length,
      onHands,
      overdue,
      returned,
    };
  });

  return (
    <VStack w="$full" px="$7" py="$5" gap="$6" alignItems="start">
      <Heading size="lg" color="$accent11">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—è</Heading>

      <SimpleGrid columns={{ "@initial": 1, "@md": 2 }} gap="$4" w="$md">
        <StatCard label="–í—Å–µ–≥–æ –∫–Ω–∏–≥" value={store["books"]?.length} color="gray" icon="üìö" />
        <StatCard label="–í—ã–¥–∞–Ω–æ" value={store["borrowedIssues"]?.length} color="orange" icon="üìñ" />
      </SimpleGrid>

      <SimpleGrid columns={1} gap="$4" w="$md">
        <StatCard label="–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ" value={stats().overdue} color="red" icon="‚è≥" />
        <StatCard label="–í–æ–∑–≤—Ä–∞—â–µ–Ω–æ" value={store["returns"]?.length} color="green" icon="‚úîÔ∏è" />
      </SimpleGrid>
    </VStack>
  );
}

function StatCard({ label, value, color, icon }) {
  return (
    <Box p="$5" borderRadius="$2xl" bgColor="white" boxShadow="$md">
      <Text fontSize="sm" color="$neutral10" mb="$2" display="flex" alignItems="center">
        <span style={{ fontSize: "1.5em", marginRight: "10px" }}>{icon}</span> {label}
      </Text>
      <Text fontSize="2xl" color={`$${color}10`} fontWeight="$bold">{value}</Text>
    </Box>
  );
}





